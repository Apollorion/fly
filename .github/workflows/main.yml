name: 'main'

on:
  push:
    tags:
      - v*
  pull_request:
    types: [ labeled ]

permissions:
  id-token: write
  contents: write

jobs:

  push:
    name: 'Test and Deploy'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.label.name == 'safe-to-stage'

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install

      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: build

      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: test

      - name: Create release version string
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "FLY_RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build Zip
        if: startsWith(github.ref, 'refs/tags/')
        run: | 
          cp LICENSE ./dist/
          envsubst < ./extension/manifest.json > ./dist/manifest.json
          cp ./extension/img.png ./dist/img.png
          cd ./dist
          zip -r extension.zip ./
          mv extension.zip ../

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            extension.zip
